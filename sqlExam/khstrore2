/* 
--멤버의 이름, 이메일 주소 및 취미 검색
SELECT M.MNAME, M.MEmail, H.Hobby
 --MEMBERINFO 아래에 있는 NAME 
FROM MEMBERINFO M
JOIN Hobbies H ON M.MNO = H.MNO;
*/

/*
--멤버의 아이디 비밀번호
CREATE TABLE ID_pw (
MNO INT PRIMARY KEY,
USER_ID VARCHAR(50),
USER_PW VARCHAR(50)
)
*/


/*

--자신의 이름에 위치한 아이디 비밀번호 변경 취미 생년월일 이메일
UPDATE memberinfo SET M.mname='DDD', M.memail='KH@KH.COM', M.mbirth=TO_DATE('1991-09-18','YYYY-MM-DD') WHERE MNO = 11;
UPDATE ID_PW SET id_pw.user_id='AAA', ID_PW.USER_PW='password111' WHERE ID_PW.MNO = 11;
--JOIN 활용해서 멤버에 아이디 비밀번호 함께 출력하기
JOIN MEMBERINFO M ON ID_PW.USER_ID, ID_PW.USER_PW 

--JOIN 활용해서 멤버에 아이디 비밀번호 취미 함께 출력하기

*/

/*
--CREATE
CREATE TABLE FridayTABLE (
id NUMBER(5) PRIMARY KEY,
name VARCHAR2(50),
description VARCHAR2(100),
birthdate DATE
);
*/

/*
--INSERT문
--TO DATE 함수 사용해서 날짜 형식으로 데이터 삽입
INSERT INTO fridaytable (id, name, description, birthdate)
    VALUES (1, '박창규', '금요일천사', TO_DATE('1970-05-25','YYYY-MM-DD'));
INSERT INTO fridaytable (id, name, description, birthdate)
    VALUES (2, '나세희', '8월의 요정', TO_DATE('1997-08-16','YYYY-MM-DD'));
INSERT INTO fridaytable (id, name, description, birthdate)
    VALUES (3, '주서경', '11월의 악마', TO_DATE('2002-11-29','YYYY-MM-DD'));
INSERT INTO fridaytable (id, name, description, birthdate)
    VALUES (4, '김민수', '2월의 요정', TO_DATE('2000-02-07','YYYY-MM-DD'));
INSERT INTO fridaytable (id, name, description, birthdate)
    VALUES (5, '이미혜', '2월의 요정', TO_DATE('2001-02-09','YYYY-MM-DD'));
INSERT INTO fridaytable (id, name, description, birthdate)
VALUES (6, 'Jane Smith', '만나서 반가워요!', TO_DATE('2004-05-05','YYYY-MM-DD'));
*/

SELECT * FROM fridaytable ORDER BY name;
--ORDER BY : 결과 정렬
--이름을 오름차순으로 정렬
SELECT * FROM fridaytable ORDER BY birthdate;
--나이를 오름차순으로 정렬

--COUNT : 행의 수를 세어줍니다.
SELECT COUNT(*) AS row_COUNT FROM fridaytable;

--테이블 구조 변경하기
--열의 크기 늘리기
ALTER TABLE fridaytable MODIFY description VARCHAR2(200);

--SUM 숫자 열의 합을 계산
SELECT SUM(id) AS id_sum FROM fridaytable;
--모든 id값(id값 = ) 을 합산한 것

--TO_CHAR :  날짜를 문자열로 변환하는 것
SELECT name, TO_CHAR(birthdate, 'YYYY-MM-DD') AS birthdate_str FROM fridaytable;

--LENGTH : 문자열의 길이를 반환하는 것
SELECT name, LENGTH(name) AS name_len FROM fridaytable;
----description에 있는 문자열의 길이를 반환
SELECT description, LENGTH(description) AS name_len FROM fridaytable;

--UPPER 문자열을 대문자로 변환
SELECT name, UPPER (name) AS upper_name FROM fridaytable;

--LOWER 문자열을 소문자로 변환
SELECT name, LOWER (name) AS lower_name FROM fridaytable;

--ROUND 숫자를 반올림
--brithdate 열의 연도를 반올림하여 출력
--EXTRACT : 날짜 값에서 연도를 추출하는 명령어
SELECT name, ROUND(EXTRACT(YEAR FROM birthdate)) AS BirthYEAR FROM fridaytable;


    
    
